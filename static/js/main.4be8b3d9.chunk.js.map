{"version":3,"sources":["components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","modeText","onClick","toggleMode","style","cursor","htmlFor","textmode","display","document","body","color","backgroundColor","getElementById","width","height","defaultProps","aboutText","Textform","useState","text","setText","greyStyle","onChange","event","target","value","rows","placeholder","uppercaseText","toUpperCase","showAlert","lowercaseText","toLowerCase","select","navigator","clipboard","writeText","endsWith","split","length","App","setMode","setModeText","setTextMode","textColor","setTextColor","setAlert","message","msg","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4be8b3d9.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nfunction Navbar(props) {\r\n  let myStyle2={\r\ncursor:'pointer'\r\n  }\r\n  const redOnclick=function(){\r\n    document.body.style.color=\"#eab7b7\";\r\n    document.body.style.backgroundColor=\"#841010\";\r\n\r\n    document.getElementById('myBox').style.backgroundColor=\"#841010\"\r\n    document.getElementById('myBox').style.color=\"white\";\r\n    document.getElementById('up').style.backgroundColor=\"#da1616\";\r\n    document.getElementById('lo').style.backgroundColor=\"#da1616\";\r\n    document.getElementById('cl').style.backgroundColor=\"#da1616\";\r\n    document.getElementById('co').style.backgroundColor=\"#da1616\";\r\n  }\r\n  const greenOnclick=()=>{\r\n    document.body.style.backgroundColor=\"#0e4818\"\r\n    document.body.style.color=\"#caf9d6\";\r\n    document.getElementById('myBox').style.backgroundColor=\"#0e4818\"\r\n    document.getElementById('myBox').style.color=\"white\";\r\n\r\n    document.getElementById('up').style.backgroundColor=\"green\";\r\n    document.getElementById('lo').style.backgroundColor=\"green\";\r\n    document.getElementById('cl').style.backgroundColor=\"green\";\r\n    document.getElementById('co').style.backgroundColor=\"green\";\r\n  }\r\n  const blueOnclick=()=>{\r\n    document.body.style.backgroundColor=\"#091c38\"\r\n    document.getElementById('myBox').style.backgroundColor=\"#091c38\"\r\n    document.getElementById('myBox').style.color=\"white\";\r\n \r\n    document.body.style.color=\"#d5c7f1\";\r\n\r\n    document.getElementById('up').style.backgroundColor=\"blue\";\r\n    document.getElementById('lo').style.backgroundColor=\"blue\";\r\n    document.getElementById('cl').style.backgroundColor=\"blue\";\r\n    document.getElementById('co').style.backgroundColor=\"blue\";\r\n  }\r\n  const blackOnclick=()=>{\r\n    document.body.style.backgroundColor=\"#2a2c2f\"\r\n    document.getElementById('myBox').style.backgroundColor=\"#2a2c2f\"\r\n    document.getElementById('myBox').style.color=\"white\";\r\n    document.body.style.color=\"#6f7571\";\r\n\r\n    document.getElementById('up').style.backgroundColor=\"#2b2b2f\";\r\n    document.getElementById('lo').style.backgroundColor=\"#2b2b2f\";\r\n    document.getElementById('cl').style.backgroundColor=\"#2b2b2f\";\r\n    document.getElementById('co').style.backgroundColor=\"#2b2b2f\";\r\n  }\r\n    return(\r\n<>\r\n<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n        </li>\r\n       \r\n        \r\n       \r\n      </ul>\r\n      <div className={`text-${props.modeText} form-check form-switch`}>\r\n  <input onClick={props.toggleMode} className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" style={myStyle2}/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault \">{props.textmode}</label>\r\n</div>\r\n<div style={{display: \"flex\"}}>\r\n<div onClick={redOnclick} className=\"mx-1 rounded-circle\" id=\"red\" style={{backgroundColor:\"red\",width:\"20px\",height:\"20px\",cursor:\"pointer\"}}>\r\n\r\n</div>\r\n  \r\n<div onClick={blueOnclick} className=\"mx-1 rounded-circle\" id=\"blue\" style={{backgroundColor:\"blue\",width:\"20px\",height:\"20px\",cursor:\"pointer\"}}>\r\n\r\n</div>\r\n<div onClick={greenOnclick} className=\"mx-1 rounded-circle\" id=\"green\" style={{backgroundColor:\"green\",width:\"20px\",height:\"20px\",cursor:\"pointer\"}}>\r\n\r\n</div>\r\n<div onClick={blackOnclick} className=\"mx-1 rounded-circle\" id=\"black\" style={{backgroundColor:\"#191c21\",width:\"20px\",height:\"20px\",cursor:\"pointer\"}}>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n    </div>\r\n  \r\n</nav>\r\n</>\r\n    );\r\n}\r\n//It will be set the type of the poptype\r\nNavbar.propTypes={\r\n  // title:PropTypes.string,\r\n\r\n  // it will throw error when there proptype is empty \r\n\r\n  //it shouldusually use in react app\r\n  title:PropTypes.string.isRequired,\r\n\r\n  aboutText:PropTypes.string.isRequired\r\n\r\n}\r\n//It will set default value for proptype\r\nNavbar.defaultProps={\r\n  title:\"Set title here\",\r\n  aboutText:\"About\"\r\n}\r\nexport default Navbar\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Textform(props) {\r\n    let [text,setText] = useState(\"\")\r\n    let greyStyle={\r\n        backgroundColor:props.mode==='dark'?'#091c38':'white',\r\n        color:props.mode==='dark'?'white':'black'\r\n    }\r\n\r\n  \r\n    \r\n const handleUpClick=()=>{\r\n \r\n     let uppercaseText=text.toUpperCase()\r\n     setText(uppercaseText)\r\n     props.showAlert(\"Your text has converted in Upper Case\",\"success\")\r\n    }\r\n    \r\n    const handleClClick=()=>{\r\n     props.showAlert(\"The text is clear now\",\"success\")\r\n \r\n\r\n     setText(\"\")\r\n    }\r\n const handleLoClick=()=>{\r\n \r\n     let lowercaseText=text.toLowerCase()\r\n     setText(lowercaseText)\r\n     props.showAlert(\"The text has converted in Lower Case\",\"success\")\r\n\r\n    }\r\n  \r\n const handleCopyClick=()=>{\r\n let text=document.getElementById('myBox');\r\n text.select();\r\n navigator.clipboard.writeText(text.value);\r\n props.showAlert(\"The text has copied to clipboard\",\"success\")\r\n\r\n    }\r\n  \r\n    const handleOnChange=(event)=>{\r\n\r\n        setText(event.target.value)\r\n }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container mt-3\">\r\n            <h2>{props.title}</h2>\r\n<div >\r\n  <label htmlFor=\"myBox\" className=\"form-label\"></label>\r\n  <textarea  className=\"form-control\" onChange={handleOnChange} id=\"myBox\" rows=\"13\" value={text} placeholder=\"Enter your text\" style={greyStyle} ></textarea>\r\n</div>\r\n<button  id=\"up\" className=\"my-3 btn btn-primary\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n<button  id=\"lo\" className=\"my-3 mx-3 btn btn-primary\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n<button  id=\"cl\" className=\"  btn btn-primary\" onClick={handleClClick}>Clear the text</button>\r\n<button  id=\"co\" className=\"  mx-3 btn btn-primary\" onClick={handleCopyClick}>Copy the text</button>\r\n</div>\r\n<div className=\"container my-2\">\r\n    <h1>Your text summary</h1>\r\n    <p>{text.endsWith(' ')?text.split(' ').length-1:text.split(' ').length} words and {text.length} characters</p>\r\n    <p>{text.split(' ').length * 0.008} Minutes to read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text}</p>\r\n</div>\r\n        </>\r\n    )\r\n}\r\nTextform.propTypes={\r\n    title:PropTypes.string.isRequired\r\n \r\n}\r\n  \r\n  Textform.defaultProps={\r\n    title:\"Set title here\"\r\n   } \r\n\r\n","\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport Textform from './components/Textform.js'\n// import Alert from './components/Alert.js';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const[mode,setMode]=useState('light')\n  const[modeText,setModeText]=useState('dark')\n  const[textmode,setTextMode]=useState('Enable Dark Mode');\nconst[textColor,setTextColor]=useState('white');\n  const[alert,setAlert]=useState(null)\n\n\n const showAlert= function (message,type) {\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n  const toggleMode=()=>{\n    if (mode==='light') {\n      setTextMode(\"Disable light mode\")\n      setModeText(\"light\");\n      document.body.style.backgroundColor=\"#091c38\"\n      document.body.style.color=\"white\";\n      \n      setMode(\"dark\")\n      showAlert(\"Dark Mode has been enabled\",\"success\")\n      \n    }\n    else{\n      \n      setModeText(\"dark\")\n      setTextMode(\"Enable light mode\")\n      setMode(\"light\")\n      showAlert(\"Light Mode has been enabled\",\"success\")\n      document.body.style.color=\"black\"\n      document.body.style.backgroundColor=\"white\"\n    }\n  }\n  return (\n    <>\n<Navbar modeText={modeText} title=\"Textutils\" textmode={textmode} aboutText=\"About Textutils\" mode={mode} toggleMode={toggleMode}/>\n <Textform  setTextColor={setTextColor} textColor={textColor} showAlert={showAlert} mode={mode} title=\"Enter your text here \" />\n\n    </>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}